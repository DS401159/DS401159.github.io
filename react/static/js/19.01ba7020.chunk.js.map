{"version":3,"sources":["scripts/views/score/index.js"],"names":["Option","Select","setdata","res","obj","score","username","mintor","kj","data","result","forEach","item","push","type","replace","Score","connect","state","bj","getIn","user","handleChangemintor","value","setState","setTimeout","axios","get","params","search","then","newmintor","newkj","show","content","style","width","window","innerWidth","myChart","echarts","init","title","setOption","text","tooltip","xAxis","yAxis","series","name","handleChangetype","this","props","dispatch","getbj","url","getkj","legend","minInterval","axisLabel","interval","formatter","split","join","className","defaultValue","onChange","map","i","code","key","marginLeft","p_code","ref","el","height","display","Component"],"mappings":"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","file":"static/js/19.01ba7020.chunk.js","sourcesContent":["\r\nimport echarts from 'echarts'\r\nimport { Select, Input} from 'antd';\r\nimport { axios } from '&'\r\nconst { Option } = Select;\r\nimport {connect} from 'react-redux'\r\nimport './index.scss'\r\nimport { getkj,getbj } from '../../actions';\r\nfunction setdata(res) {\r\n    var obj={\r\n        score:[],\r\n        username:[],\r\n        mintor:'',\r\n        kj:''\r\n    }\r\n    res.data.result.forEach((item) => {\r\n        obj.score.push(item.score?item.score:0)\r\n        obj.username.push(item.username)\r\n        obj.kj=item.type\r\n        obj.mintor=item.mintor.replace('wh','武汉')\r\n    })\r\n    return obj\r\n}\r\n@connect(\r\n    (state)=>{\r\n        return{\r\n            bj:state.getIn(['data','bj']),\r\n            kj:state.getIn(['data','kj']),\r\n            user:state.getIn(['user','user'])\r\n        }\r\n    }\r\n)\r\n\r\nexport default class Score extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            mintor: '',\r\n            type: '',\r\n            username:[],\r\n            score:[],\r\n            newmintor:'',\r\n            newkj:'',\r\n            show:'block'\r\n        }\r\n    }\r\n    handleChangemintor = (value) => {\r\n        this.setState({\r\n            mintor:value\r\n        })\r\n        setTimeout(()=>{\r\n            axios.get('/react/getcore', {\r\n                params: {\r\n                    mintor:this.state.mintor,\r\n                    type:this.state.type,\r\n                    search:this.state.search\r\n                }\r\n            }).then(res => {\r\n                var obj=setdata(res)\r\n                this.setState({\r\n                    username:obj.username,\r\n                    score:obj.score,\r\n                    newmintor:obj.mintor,\r\n                    newkj:obj.kj\r\n                })\r\n                if(this.state.username[0]){\r\n                    this.setState({\r\n                        show:'block'\r\n                    })\r\n                    var  resizeWorldMapContainer1 =()=>{\r\n                        this.content.style.width = (window.innerWidth-250) +'px';\r\n                    };\r\n                    resizeWorldMapContainer1()\r\n                    var myChart = echarts.init(this.content);\r\n                    var title=`${this.state.newmintor}-${this.state.newkj}` \r\n                    myChart.setOption({\r\n                        title: { text:title},\r\n                        tooltip: {},\r\n                        xAxis: {\r\n                            data: this.state.username\r\n                        },\r\n                        yAxis: {},\r\n                        series: [{\r\n                            name: '成绩',\r\n                            type: 'bar',\r\n                            data: this.state.score\r\n                        }]\r\n                    }); \r\n                }else{\r\n                    this.setState({\r\n                        show:'none'\r\n                    })\r\n                }\r\n            })\r\n        },100)\r\n    }\r\n\r\n    handleChangetype = (value) => {\r\n        this.setState({\r\n            type:value\r\n        })\r\n        setTimeout(()=>{\r\n            axios.get('/react/getcore', {\r\n                params: {\r\n                    mintor:this.state.mintor,\r\n                    type:this.state.type,\r\n                    search:this.state.search\r\n                }\r\n            }).then(res => {\r\n                var obj=setdata(res)\r\n                this.setState({\r\n                    username:obj.username,\r\n                    score:obj.score,\r\n                    newmintor:obj.mintor,\r\n                    newkj:obj.kj\r\n                })\r\n                if(this.state.username[0]){\r\n                    this.setState({\r\n                        show:'block'\r\n                    })\r\n                    var  resizeWorldMapContainer1 =()=>{\r\n                        this.content.style.width = (window.innerWidth-250) +'px';\r\n                    };\r\n                    resizeWorldMapContainer1()\r\n                    var myChart = echarts.init(this.content);\r\n                    var title=`${this.state.newmintor}-${this.state.newkj}` \r\n                    myChart.setOption({\r\n                        title: { text:title},\r\n                        tooltip: {},\r\n                        xAxis: {\r\n                            data: this.state.username\r\n                        },\r\n                        yAxis: {},\r\n                        series: [{\r\n                            name: '成绩',\r\n                            type: 'bar',\r\n                            data: this.state.score\r\n                        }]\r\n                    }); \r\n                }else{\r\n                    this.setState({\r\n                        show:'none'\r\n                    })\r\n                }\r\n            })\r\n        },100)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(getbj({url:'/react/getbj'}))\r\n        this.props.dispatch(getkj({url:'/react/getkj'}))\r\n        if (!this.state.username[0]) {\r\n            axios.get('/react/getcore', {\r\n                params: {\r\n                    mintor: 'wh1903',\r\n                    type:'vue'\r\n                }\r\n            }).then(res => {\r\n                var obj=setdata(res)\r\n                this.setState({\r\n                    username:obj.username,\r\n                    score:obj.score,\r\n                    newmintor:obj.mintor,\r\n                    newkj:obj.kj\r\n                })\r\n                if(this.state.username[0]){\r\n                    this.setState({\r\n                        show:'block'\r\n                    })\r\n                    var  resizeWorldMapContainer1 =()=>{\r\n                        this.content.style.width = (window.innerWidth-250) +'px';\r\n                    };\r\n                    resizeWorldMapContainer1()\r\n                    var myChart = echarts.init(this.content);\r\n                    var title=`${this.state.newmintor}-${this.state.newkj}` \r\n                    myChart.setOption({\r\n                        title: { text:title},\r\n                        tooltip: {},\r\n                        legend: {\r\n                            data:['成绩']\r\n                        },\r\n                        xAxis: {\r\n                            data: this.state.username,\r\n                            minInterval:1,\r\n                            axisLabel: {  \r\n                                interval: 0,  \r\n                                formatter:function(value)  \r\n                                {  \r\n                                    return value.split(\"\").join(\"\\n\");  \r\n                                }  \r\n                            }  \r\n                        }, \r\n                        yAxis: {},\r\n                        series: [{\r\n                            name: '成绩',\r\n                            type: 'bar',\r\n                            data: this.state.score\r\n                        }]\r\n                    }); \r\n                }else{\r\n                    this.setState({\r\n                        show:'none'\r\n                    })\r\n                }\r\n            })\r\n        } \r\n    }\r\n    render(){\r\n        var {\r\n            bj,\r\n            kj\r\n        } = this.props\r\n        return(\r\n            <div> \r\n                <h2>项目成绩 分析</h2>\r\n                <span className='select'>选择对应班级：</span>\r\n                    <Select defaultValue=\"请选择\" style={{ width: 180 }} onChange={this.handleChangemintor}>\r\n                        {\r\n                            bj.map((item, i) => {\r\n                                return (\r\n                                    <Option value={item.code} key={i}>{item.value}</Option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                    <span className='select' style={{ marginLeft: 40 }}>请选择框架类型:</span>\r\n                    <Select defaultValue=\"请选择框架类型\" style={{ width: 180 }} onChange={this.handleChangetype}>\r\n                        {\r\n                            kj.map((item, i) => {\r\n                                return (\r\n                                    <Option value={item.p_code} key={i}>{item.value}</Option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                <div ref={el=>this.content=el} style={{width:'100%',height:400,display:this.state.show}}></div>\r\n                <h2 style={{display:this.state.show=='none'?'block':'none'}}> 还未评定成绩</h2> \r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}