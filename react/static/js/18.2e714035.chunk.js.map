{"version":3,"sources":["scripts/views/question/index.js"],"names":["Option","Select","TextArea","Input","style","first","fontWeight","marginBottom","second","showToastNoMask","msg","hide","info","Question","connect","state","qt","getIn","onChange","value","setState","one","axios","get","params","q_type","then","res","question","data","result","onChangetxt","event","e","target","name","answer","clear","forEach","item","submit","this","props","dispatch","getqt","url","width","map","i","key","wenti","autosize","minRows","maxRows","type","marginRight","onClick","Component"],"mappings":"2VAGQA,EAAWC,IAAXD,OACAE,EAAaC,IAAbD,SAKJE,EAAM,CACNC,MAAM,CACFC,WAAW,OACXC,aAAa,GAEjBC,OAAO,CACHD,aAAa,KAKd,SAASE,EAAgBC,GAC5B,IAAMC,OACN,IAAMC,KAAKF,EAAK,EAAG,MAAM,G,IAYRG,EARpBC,aACG,SAACC,GACG,MAAM,CACFC,GAAGD,EAAME,MAAM,CAAC,OAAO,U,eAM/B,aAAc,IAAD,8BACT,+CAMJC,SAAS,SAACC,GACN,EAAKC,SAAS,CACVC,IAAIF,IAERG,IAAMC,IAAI,qBAAqB,CAACC,OAAO,CAACC,OAAON,KAASO,MAAK,SAAAC,GACzD,EAAKP,SAAS,CACVQ,SAASD,EAAIE,KAAKC,aAbjB,EAkBbC,YAAa,SAAAC,GACT,IAAIC,EAAID,EAAME,OACd,EAAKnB,MAAMa,SAASK,EAAEE,MAAMC,OAAOH,EAAEd,MACrC,EAAKC,SAAS,CACVQ,SAAS,EAAKb,MAAMa,YAtBf,EA8BbS,MAAM,WACF,EAAKtB,MAAMa,SAASU,SAAQ,SAACC,GACzBA,EAAKH,OAAO,MAEhB,EAAKhB,SAAS,CACVQ,SAAS,EAAKb,MAAMa,YAnCf,EAuCbY,OAAO,WACHlB,IAAMC,IAAI,sBAAsB,CAACC,OAAO,CAACI,SAAS,EAAKb,MAAMa,SAASP,IAAI,EAAKN,MAAMM,OAAOK,MAAK,SAAAC,GAC7FlB,EAAgB,4CAvCpB,EAAKM,MAAM,CACPM,IAAI,yDACJO,SAAS,IAJJ,E,iFA0BTa,KAAKC,MAAMC,SAASC,YAAO,CAACC,IAAI,oB,+BAmB3B,IAAD,SAGFJ,KAAK1B,MADHM,EAFA,EAEAA,IAAIO,EAFJ,EAEIA,SAER,OACI,2BACI,4EACA,uBAAKxB,MAAOA,EAAMI,QACd,uBAAKJ,MAAOA,EAAMC,OAAlB,gEACA,gBAAC,IAAD,CAAQD,MAAO,CAAE0C,MAAO,KAAQ5B,SAAUuB,KAAKvB,SAAUC,MAAOE,GAExDoB,KAAKC,MAAM1B,GAAG+B,KAAI,SAACR,EAAKS,GACpB,OACI,gBAAChD,EAAD,CAAQmB,MAAOoB,EAAKd,OAAQwB,IAAKD,GAAIT,EAAKpB,YAM9D,uDAEIS,EAASmB,KAAI,SAACR,EAAKS,GACf,OACI,uBAAK5C,MAAOA,EAAMI,OAAQyC,IAAKD,GAC3B,uBAAK5C,MAAOA,EAAMC,OAAQkC,EAAKW,OAC/B,gBAAChD,EAAD,CACIiB,MAAOoB,EAAKH,OACZD,KAAMa,EACN9B,SAAU,EAAKa,YACf3B,MAAO,CAAE0C,MAAO,KAChBK,SAAU,CAAEC,QAAS,EAAGC,QAAS,SAMrD,gBAAC,IAAD,CAAQC,KAAK,UAAUlD,MAAO,CAACmD,YAAY,IAAKC,QAASf,KAAKD,QAA9D,gBACA,gBAAC,IAAD,CAAQc,KAAK,SAASE,QAASf,KAAKJ,OAApC,qB,GAnFsBoB,K","file":"static/js/18.2e714035.chunk.js","sourcesContent":["\r\nimport './index.scss'\r\nimport { Select,Input,Button,message } from 'antd';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nimport {connect} from 'react-redux'\r\nimport {getqt, changeanswer} from '../../actions'\r\nimport {axios} from '&'\r\n\r\nvar style={\r\n    first:{\r\n        fontWeight:'bold',\r\n        marginBottom:7\r\n    },\r\n    second:{\r\n        marginBottom:20\r\n    }\r\n}\r\nimport {Toast} from 'antd-mobile'\r\n\r\nexport function showToastNoMask(msg) {\r\n    Toast.hide();\r\n    Toast.info(msg, 2, null, false);\r\n  }\r\n\r\n\r\n@connect(\r\n    (state)=>{\r\n        return{\r\n            qt:state.getIn(['data','qt']),\r\n        }\r\n    }\r\n)\r\n\r\nexport default class Question extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            one:'请选择面试题目类别',\r\n            question:[]\r\n        }\r\n    }\r\n    onChange=(value)=>{\r\n        this.setState({\r\n            one:value\r\n        })\r\n        axios.get('/react/getquestion',{params:{q_type:value}}).then(res=>{\r\n            this.setState({\r\n                question:res.data.result\r\n            })\r\n        })\r\n    }\r\n\r\n    onChangetxt= event => {\r\n        let e = event.target\r\n        this.state.question[e.name].answer=e.value\r\n        this.setState({\r\n            question:this.state.question\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.props.dispatch(getqt ({url:'/react/getqt'}))\r\n    }\r\n\r\n\r\n    clear=()=>{\r\n        this.state.question.forEach((item)=>{\r\n            item.answer=''\r\n        })\r\n        this.setState({\r\n            question:this.state.question\r\n        })\r\n    }\r\n\r\n    submit=()=>{\r\n        axios.get('/react/updateanswer',{params:{question:this.state.question,one:this.state.one}}).then(res=>{\r\n            showToastNoMask('答案提交成功')\r\n        })\r\n    }\r\n\r\n    render(){\r\n        var {\r\n            one,question\r\n        }=this.state\r\n        return(\r\n            <div> \r\n                <h2>120急救包-面试宝典</h2>\r\n                <div style={style.second}>\r\n                    <div style={style.first}>请选择面试题目类别：</div>\r\n                    <Select style={{ width: 500 }}  onChange={this.onChange} value={one}>\r\n                        {\r\n                            this.props.qt.map((item,i)=>{\r\n                                return (\r\n                                    <Option value={item.q_type} key={i}>{item.value}</Option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </div>\r\n                <h2>面试问题:</h2>\r\n                {\r\n                    question.map((item,i)=>{\r\n                        return(\r\n                            <div style={style.second} key={i}>\r\n                                <div style={style.first}>{item.wenti}</div>\r\n                                <TextArea\r\n                                    value={item.answer}\r\n                                    name={i}\r\n                                    onChange={this.onChangetxt}\r\n                                    style={{ width: 500 }}\r\n                                    autosize={{ minRows: 7, maxRows: 8}}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <Button type='primary' style={{marginRight:50}} onClick={this.submit}>提交</Button>\r\n                <Button type='danger' onClick={this.clear}>重置</Button>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}